{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // Gets all properties\n  getProperties: async function () {\n    let response = await axios.get(\"/api/properties/\").catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  getTopProperties: async function (how_many) {\n    let response = await axios.get(\"/api/properties/top/\" + how_many).catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  // Gets the property with the given id\n  getProperty: async function (id) {\n    let response = axios.get(\"/api/properties/\" + id).catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  // Deletes the property with the given id\n  deleteProperty: async function (id) {\n    let response = axios.delete(\"/api/properties/\" + id).then(x => console.log(\"the response from deleting the proptery is\", x)).catch(error => {\n      if (error.response) {\n        console.log(\"error: \", error.response);\n      }\n    });\n    return response;\n  },\n  // Saves a property to the database\n  saveProperty: async function (propertyData) {\n    console.log(\"this save property API\");\n    console.log(\"This is the property data:\" + JSON.stringify(propertyData));\n    let response = axios.post(\"/api/properties/\", propertyData).then(x => console.log(\"the response from posting the property is\", x)).catch(error => {\n      if (error.response) {\n        console.log(\"error: \", error.response);\n      }\n    });\n    return response;\n  },\n  // update a property to the database\n  updateProperty: async function (id) {\n    let response = axios.put(\"/api/properties/\" + id).then(x => console.log(\"the response from updating the proptery is\", x)).catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  ///*****Users********** */\n  // Gets all users\n  getUsers: async function () {\n    let response = axios.get(\"/api/users/\").catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  // Gets the user with the given id\n  getUser: async function (id) {\n    let response = axios.get(\"/api/users/\" + id).catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  // update the user with the given id\n  updateUser: async function (id) {\n    let response = axios.put(\"/api/users/\" + id).then(x => console.log(\"the response from updating the user is\", x)).catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  // Deletes the user with the given id\n  deleteUser: async function (id) {\n    let response = axios.delete(\"/api/users/\" + id).then(x => console.log(\"the response from deleting the user is:\", x)).catch(err => console.log(\"error: \", err));\n    return response;\n  },\n  // Saves a user to the database\n  saveUser: async function (userData) {\n    let response = axios.post(\"/api/users/\", userData).then(x => console.log(\"the response from posting the user is\", x)).catch(error => {\n      if (error.response) {\n        console.log(\"error: \", error.response);\n      }\n    });\n    return response;\n  },\n  search: (city, stateCode, beds, priceMin, baths, priceMax, sqft) => axios({\n    \"method\": \"GET\",\n    \"url\": \"https://realtor.p.rapidapi.com/properties/v2/list-for-sale\",\n    \"headers\": {\n      \"content-type\": \"application/octet-stream\",\n      \"x-rapidapi-host\": \"realtor.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"ad3ef9d53dmsh2c807bcf929ee3ap15e042jsnabc803406bee\",\n      \"useQueryString\": true\n    },\n    \"params\": {\n      \"beds_min\": beds,\n      \"price_min\": priceMin,\n      \"sort\": \"relevance\",\n      \"baths_min\": baths,\n      \"price_max\": priceMax,\n      \"sqft_min\": sqft,\n      \"city\": city,\n      \"limit\": \"10\",\n      \"offset\": \"0\",\n      \"state_code\": stateCode\n    }\n  }),\n  detailedSearch: property_id => axios({\n    \"method\": \"GET\",\n    \"url\": \"https://realtor.p.rapidapi.com/properties/v2/detail\",\n    \"headers\": {\n      \"content-type\": \"application/octet-stream\",\n      \"x-rapidapi-host\": \"realtor.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"ad3ef9d53dmsh2c807bcf929ee3ap15e042jsnabc803406bee\",\n      \"useQueryString\": true\n    },\n    \"params\": {\n      \"property_id\": property_id\n    }\n  })\n};","map":{"version":3,"sources":["C:/Users/naoui/Desktop/RE1/real-estate/client/src/utils/API.js"],"names":["axios","getProperties","response","get","catch","err","console","log","getTopProperties","how_many","getProperty","id","deleteProperty","delete","then","x","error","saveProperty","propertyData","JSON","stringify","post","updateProperty","put","getUsers","getUser","updateUser","deleteUser","saveUser","userData","search","city","stateCode","beds","priceMin","baths","priceMax","sqft","detailedSearch","property_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all properties\r\n  getProperties: async function () {\r\n    let response = await axios.get(\"/api/properties/\")\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  getTopProperties: async function(how_many){\r\n    let response = await axios.get(\"/api/properties/top/\" + how_many)\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  // Gets the property with the given id\r\n  getProperty:  async function (id) {\r\n    let response = axios.get(\"/api/properties/\" + id)\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  // Deletes the property with the given id\r\n  deleteProperty: async function (id) {\r\n    let response = axios.delete(\"/api/properties/\" + id)\r\n    .then(x => console.log(\"the response from deleting the proptery is\", x))\r\n    .catch(error =>  \r\n      {\r\n         if (error.response) {\r\n            console.log(\"error: \", error.response);\r\n      }\r\n    }\r\n    );\r\n    return response;\r\n  },\r\n  // Saves a property to the database\r\n  saveProperty: async function (propertyData) {\r\n    console.log(\"this save property API\")\r\n    console.log(\"This is the property data:\" + JSON.stringify(propertyData))\r\n    let response = axios.post(\"/api/properties/\", propertyData)\r\n    .then(x => console.log(\"the response from posting the property is\", x))\r\n    .catch(error =>  \r\n      {\r\n         if (error.response) {\r\n            console.log(\"error: \", error.response);\r\n      }\r\n    });\r\n    return response;\r\n  },\r\n  // update a property to the database\r\n  updateProperty: async function (id) {\r\n    let response = axios.put(\"/api/properties/\" + id)\r\n    .then(x => console.log(\"the response from updating the proptery is\", x))\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  ///*****Users********** */\r\n  // Gets all users\r\n  getUsers: async function () {\r\n    let response = axios.get(\"/api/users/\")\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  // Gets the user with the given id\r\n  getUser: async function (id) {\r\n    let response = axios.get(\"/api/users/\" + id)\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  // update the user with the given id\r\n  updateUser: async function (id) {\r\n    let response = axios.put(\"/api/users/\" + id)\r\n    .then(x => console.log(\"the response from updating the user is\", x))\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  // Deletes the user with the given id\r\n  deleteUser: async function (id) {\r\n    let response = axios.delete(\"/api/users/\" + id)\r\n    .then(x => console.log(\"the response from deleting the user is:\", x))\r\n    .catch(err => console.log(\"error: \", err));\r\n    return response;\r\n  },\r\n  // Saves a user to the database\r\n  saveUser: async function (userData) {\r\n    let response = axios.post(\"/api/users/\", userData)\r\n    .then(x => console.log(\"the response from posting the user is\", x))\r\n    .catch(error =>  \r\n      {\r\n         if (error.response) {\r\n            console.log(\"error: \", error.response);\r\n      }\r\n    });\r\n    return response;\r\n  },\r\n  search: (city, stateCode, beds, priceMin, baths, priceMax, sqft  ) => axios({\r\n    \"method\":\"GET\",\r\n    \"url\":\"https://realtor.p.rapidapi.com/properties/v2/list-for-sale\",\r\n    \"headers\":{\r\n    \"content-type\":\"application/octet-stream\",\r\n    \"x-rapidapi-host\":\"realtor.p.rapidapi.com\",\r\n\r\n\r\n\r\n    \"x-rapidapi-key\":\"ad3ef9d53dmsh2c807bcf929ee3ap15e042jsnabc803406bee\",\r\n\r\n\r\n    \"useQueryString\":true\r\n    },\"params\":{\r\n    \"beds_min\":beds,\r\n    \"price_min\":priceMin,\r\n    \"sort\":\"relevance\",\r\n    \"baths_min\":baths,\r\n    \"price_max\":priceMax,\r\n    \"sqft_min\":sqft,\r\n    \"city\":city,\r\n    \"limit\":\"10\",\r\n    \"offset\":\"0\",\r\n    \"state_code\":stateCode\r\n    }\r\n    }),\r\n    \r\n  detailedSearch: (property_id) => axios({\r\n      \"method\":\"GET\",\r\n      \"url\":\"https://realtor.p.rapidapi.com/properties/v2/detail\",\r\n      \"headers\":{\r\n      \"content-type\":\"application/octet-stream\",\r\n      \"x-rapidapi-host\":\"realtor.p.rapidapi.com\",\r\n      \"x-rapidapi-key\":\"ad3ef9d53dmsh2c807bcf929ee3ap15e042jsnabc803406bee\",\r\n      \"useQueryString\":true\r\n      },\"params\":{\r\n      \"property_id\":property_id\r\n      }\r\n      })\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}